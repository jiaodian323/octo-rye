<?xml version="1.0" encoding="GBK"?>
<!-- 指定Spring配置文件的Schema信息 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

	<!-- 定义数据源Bean，使用C3P0数据源实现 -->
	<!-- 并设置连接数据库的驱动、URL、用户名、密码， 连接池最大连接数、最小连接数、初始连接数等参数 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" p:driverClass="com.mysql.jdbc.Driver"
		p:jdbcUrl="jdbc:mysql://localhost:3306/hrsystem?useUnicode=true&amp;characterEncoding=UTF-8"
		p:user="root" p:password="8979" p:maxPoolSize="200" p:minPoolSize="2"
		p:initialPoolSize="2" p:maxIdleTime="20" />

	<!-- 定义Hibernate的SessionFactory，并依赖注入数据源，注入上面定义的dataSource -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<!-- annotatedClasses属性用于列出全部持久化类 -->
		<property name="annotatedClasses">
			<list>
				<!-- 以下用来列出所有的PO类 -->
				<value>com.justnd.octoryeserver.domain.Application</value>
				<value>com.justnd.octoryeserver.domain.Attend</value>
				<value>com.justnd.octoryeserver.domain.AttendType</value>
				<value>com.justnd.octoryeserver.domain.CheckBack</value>
				<value>com.justnd.octoryeserver.domain.Employee</value>
				<value>com.justnd.octoryeserver.domain.Manager</value>
				<value>com.justnd.octoryeserver.domain.Payment</value>
				<value>com.justnd.octoryeserver.domain.User</value>
				<value>com.justnd.octoryeserver.domain.Article</value>
				<value>com.justnd.octoryeserver.domain.Author</value>
				<value>com.justnd.octoryeserver.domain.HotPosts</value>
			</list>
		</property>
		<!-- 定义Hibernate的SessionFactory的属性 -->
		<property name="hibernateProperties">
			<!-- 指定数据库方言、是否自动建表、是否生成SQL语句等 -->
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=true
				hibernate.format_sql=true
				#开启二级缓存
				hibernate.cache.use_second_level_cache=true
				#设置二级缓存的提供者
				hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
			</value>
		</property>
	</bean>

	<!-- 配置DAO组件的模板 -->
	<bean id="daoTemplate" abstract="true" lazy-init="true"
		p:sessionFactory-ref="sessionFactory" />

	<bean id="employeeDao" class="com.justnd.octoryeserver.dao.impl.EmployeeDaoHibernate4"
		parent="daoTemplate" />

	<bean id="managerDao" class="com.justnd.octoryeserver.dao.impl.ManagerDaoHibernate4"
		parent="daoTemplate" />

	<bean id="attendDao" class="com.justnd.octoryeserver.dao.impl.AttendDaoHibernate4"
		parent="daoTemplate" />

	<bean id="attendTypeDao"
		class="com.justnd.octoryeserver.dao.impl.AttendTypeDaoHibernate4"
		parent="daoTemplate" />

	<bean id="appDao"
		class="com.justnd.octoryeserver.dao.impl.ApplicationDaoHibernate4"
		parent="daoTemplate" />

	<bean id="checkDao"
		class="com.justnd.octoryeserver.dao.impl.CheckBackDaoHibernate4"
		parent="daoTemplate" />

	<bean id="payDao" class="com.justnd.octoryeserver.dao.impl.PaymentDaoHibernate4"
		parent="daoTemplate" />

	<bean id="userDao" name="userDaoN" class="com.justnd.octoryeserver.dao.impl.UserDaoHibernate4"
		parent="daoTemplate" />
	<bean id="articleDao" name="articleDaoN" class="com.justnd.octoryeserver.dao.impl.ArticleDaoHibernate4"
		parent="daoTemplate"></bean>
	<bean id="authorDao" name="authorDaoN" class="com.justnd.octoryeserver.dao.impl.AuthorDaoHibernate4"
		parent="daoTemplate"></bean>
	<bean id="hotPostsDao" name="hotPostsDaoN" class="com.justnd.octoryeserver.dao.impl.HotPostsDaoHibernate4"
		parent="daoTemplate"></bean>

</beans>